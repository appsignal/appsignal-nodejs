#!/usr/bin/env node

const https = require("https")
const { agent, VERSION } = require("@appsignal/nodejs-ext")
const pkg = require("../package.json")

let extIsLoaded = false

console.log(`
ðŸ”§ AppSignal Diagnose Tool

Use this information to debug your configuration.
More information is available on the documentation site.
https://docs.appsignal.com/

Send this output to support@appsignal.com if you need help.
`)

const { extension } = agent

try {
  // @TODO: env var init
  extension.start()
  extIsLoaded = true
} catch (e) {
  if (e.message === "Extension module not loaded") {
    console.warn(
      "AppSignal extension not loaded. This could mean that your current environment isn't supported, or that another error has occured."
    )
  } else {
    console.error(
      `Failed to load AppSignal extension with error: ${e.message}. Please email us at support@appsignal.com for support.`
    )
  }

  extIsLoaded = false
}

const data = JSON.stringify({
  library: {
    language: "nodejs",
    package_version: pkg.version,
    agent_version: VERSION,
    extension_loaded: extIsLoaded
  },
  installation: {},
  host: {
    architecture: process.arch,
    os: process.platform,
    language_version: process.versions.node,
    heroku: false,
    root: false,
    running_in_container: false
  },
  app: {},
  agent: JSON.parse(extension.diagnoseRaw()),
  config: {
    options: {},
    sources: {}
  },
  validation: { push_api_key: "valid" },
  process: {},
  paths: {}
})

console.log(data)

const opts = {
  port: 443,
  method: "POST",
  host: "appsignal.com",
  path: "/diag",
  headers: {
    "Content-Type": "application/json",
    "Content-Length": data.length
  }
}

const req = https.request(opts, res => {
  res.setEncoding("utf8")
  res.on("data", chunk => {
    process.stdout.write(chunk)
  })
  res.on("end", () => {
    console.log("No more data in response.")
    extension.stop()
  })
})

req.on("error", e => {
  console.error(`problem with request: ${e.message}`)
})

// Write data to request body
req.write(data)
req.end()
