semaphore: # Default `.semaphore/semaphore.yml` contents
  version: v1.0
  name: AppSignal for Node.js
  agent:
    machine:
      type: e1-standard-2
      os_image: ubuntu2004
  auto_cancel:
    running:
      when: branch != 'main' AND branch != 'develop'
  global_job_config:
    env_vars:
    - name: RUNNING_IN_CI
      value: 'true'
    - name: NODE_ENV
      value: test
    - name: _PACKAGE_CACHE
      value: v3
    - name: _BUNDLER_CACHE
      value: v2
    prologue:
      commands:
        - checkout
        - "[ -n \"$NODE_VERSION\" ] && sem-version node $NODE_VERSION || echo Skipping Node.js install"
        -  npm i -g npm@latest

        # Mono setup
        - script/setup
        - source ~/.bashrc
  blocks:
    - name: Validation
      dependencies: []
      task:
        jobs:
        - name: Validate CI setup
          commands:
            - rake build_matrix:semaphore:validate
    - name: Linters
      dependencies: []
      task:
        jobs:
        - name: Ruby Lint (RuboCop)
          commands:
            - cache restore $_BUNDLER_CACHE-bundler-$(checksum Gemfile.lock)
            - bundle config set clean 'true'
            - bundle config set path .bundle
            - bundle install --jobs=3 --retry=3
            - cache store $_BUNDLER_CACHE-bundler-$(checksum Gemfile.lock) .bundle
            - bundle exec rubocop
        - name: Node.js Lint (Prettier)
          env_vars:
            - name: NODE_VERSION
              value: "18"
          commands:
            - cache restore
            - mono bootstrap --ci
            - cache store
            - npm run lint
        - name: Git Lint (Lintje)
          commands:
            - script/lint_git
    - name: Integration tests
      dependencies: ["Validation"]
      task:
        jobs:
        - name: Express + Redis
          commands:
            - script/integration_test_app express-redis
        - name: Express + Knex.js
          commands:
            - script/integration_test_app express-knex
        - name: Koa + MySQL
          commands:
            - script/integration_test_app koa-mysql
        - name: Koa + Mongo
          commands:
            - script/integration_test_app koa-mongo
        - name: Express + Mongoose
          commands:
            - script/integration_test_app express-mongoose
        - name: Express + Postgres
          commands:
            - script/integration_test_app express-postgres
        - name: Express + Apollo
          commands:
            - script/integration_test_app express-apollo
        - name: Express + Yoga
          commands:
            - script/integration_test_app express-yoga
        - name: Express + Prisma + Postgres
          commands:
            - script/integration_test_app express-prisma-postgres
        - name: Express + Prisma + Mongo
          commands:
            - script/integration_test_app express-prisma-mongo
        - name: Next.js
          commands:
            - script/integration_test_app nextjs
        - name: Nest.js
          commands:
            - script/integration_test_app nestjs
        - name: Fastify
          commands:
            - script/integration_test_app fastify

matrix:
  nodejs:
    - nodejs: "19"
    - nodejs: "18"
    - nodejs: "16"
    - nodejs: "14"
  package:
    extra_commands: # Run in the package's job
      - npm run test:failure
    extra_tests: # Run as separate jobs for package
      diagnose:
        - git submodule init
        - git submodule update
        - LANGUAGE=nodejs test/integration/diagnose/bin/test
