# DO NOT EDIT
# This is a generated file by the `rake build_matrix:semaphore:generate` task.
# See `build_matrix.yml` for the build matrix.
# Generate this file with `rake build_matrix:semaphore:generate`.
---
version: v1.0
name: AppSignal for Node.js
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
auto_cancel:
  running:
    when: branch != 'main' AND branch != 'develop'
global_job_config:
  env_vars:
  - name: RUNNING_IN_CI
    value: 'true'
  - name: NODE_ENV
    value: test
  - name: _PACKAGE_CACHE
    value: v3
  - name: _BUNDLER_CACHE
    value: v2
  prologue:
    commands:
    - checkout
    - '[ -n "$NODE_VERSION" ] && sem-version node $NODE_VERSION || echo Skipping Node.js
      install'
    - npm i -g npm@latest
    - script/setup
    - source ~/.bashrc
blocks:
- name: Validation
  dependencies: []
  task:
    jobs:
    - name: Validate CI setup
      commands:
      - rake build_matrix:semaphore:validate
- name: Linters
  dependencies: []
  task:
    jobs:
    - name: Ruby Lint (RuboCop)
      commands:
      - cache restore $_BUNDLER_CACHE-bundler-$(checksum Gemfile.lock)
      - bundle config set clean 'true'
      - bundle config set path .bundle
      - bundle install --jobs=3 --retry=3
      - cache store $_BUNDLER_CACHE-bundler-$(checksum Gemfile.lock) .bundle
      - bundle exec rubocop
    - name: Node.js Lint (Prettier)
      env_vars:
      - name: NODE_VERSION
        value: '18'
      commands:
      - cache restore
      - mono bootstrap --ci
      - cache store
      - npm run lint
    - name: Git Lint (Lintje)
      commands:
      - script/lint_git
- name: Integration tests
  dependencies:
  - Validation
  task:
    jobs:
    - name: Express + Redis
      commands:
      - script/integration_test_app express-redis
    - name: Express + Knex.js
      commands:
      - script/integration_test_app express-knex
    - name: Koa + MySQL
      commands:
      - script/integration_test_app koa-mysql
    - name: Koa + Mongo
      commands:
      - script/integration_test_app koa-mongo
    - name: Express + Mongoose
      commands:
      - script/integration_test_app express-mongoose
    - name: Express + Postgres
      commands:
      - script/integration_test_app express-postgres
    - name: Express + Apollo
      commands:
      - script/integration_test_app express-apollo
    - name: Express + Yoga
      commands:
      - script/integration_test_app express-yoga
    - name: Express + Prisma + Postgres
      commands:
      - script/integration_test_app express-prisma-postgres
    - name: Express + Prisma + Mongo
      commands:
      - script/integration_test_app express-prisma-mongo
    - name: Next.js
      commands:
      - script/integration_test_app nextjs
    - name: Nest.js
      commands:
      - script/integration_test_app nestjs
    - name: Fastify
      commands:
      - script/integration_test_app fastify
- name: Node.js 19 - Build
  dependencies:
  - Validation
  task:
    env_vars:
    - name: NODE_VERSION
      value: '19'
    prologue:
      commands:
      - cache restore
      - mono bootstrap --ci
      - cache store
    jobs:
    - name: Build
      commands:
      - mono build
      - cache delete $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID dist
      - cache delete $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID ext
      - cache delete $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID build
      - 'cat ext/install.report; cat ext/install.report | grep ''"status": "success"'''
- name: Node.js 19 - Tests
  dependencies:
  - Node.js 19 - Build
  task:
    env_vars:
    - name: NODE_VERSION
      value: '19'
    - name: _APPSIGNAL_EXTENSION_INSTALL
      value: 'false'
    prologue:
      commands:
      - cache restore
      - cache restore $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache restore $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache restore $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - mono bootstrap --ci
    jobs:
    - name: Test package
      commands:
      - mono test
      - npm run test:failure
    - name: Extra test - diagnose
      commands: &1
      - git submodule init
      - git submodule update
      - LANGUAGE=nodejs test/integration/diagnose/bin/test
- name: Node.js 18 - Build
  dependencies:
  - Validation
  task:
    env_vars:
    - name: NODE_VERSION
      value: '18'
    prologue:
      commands:
      - cache restore
      - mono bootstrap --ci
      - cache store
    jobs:
    - name: Build
      commands:
      - mono build
      - cache delete $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID dist
      - cache delete $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID ext
      - cache delete $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID build
      - 'cat ext/install.report; cat ext/install.report | grep ''"status": "success"'''
- name: Node.js 18 - Tests
  dependencies:
  - Node.js 18 - Build
  task:
    env_vars:
    - name: NODE_VERSION
      value: '18'
    - name: _APPSIGNAL_EXTENSION_INSTALL
      value: 'false'
    prologue:
      commands:
      - cache restore
      - cache restore $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache restore $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache restore $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - mono bootstrap --ci
    jobs:
    - name: Test package
      commands:
      - mono test
      - npm run test:failure
    - name: Extra test - diagnose
      commands: *1
- name: Node.js 16 - Build
  dependencies:
  - Validation
  task:
    env_vars:
    - name: NODE_VERSION
      value: '16'
    prologue:
      commands:
      - cache restore
      - mono bootstrap --ci
      - cache store
    jobs:
    - name: Build
      commands:
      - mono build
      - cache delete $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID dist
      - cache delete $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID ext
      - cache delete $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID build
      - 'cat ext/install.report; cat ext/install.report | grep ''"status": "success"'''
- name: Node.js 16 - Tests
  dependencies:
  - Node.js 16 - Build
  task:
    env_vars:
    - name: NODE_VERSION
      value: '16'
    - name: _APPSIGNAL_EXTENSION_INSTALL
      value: 'false'
    prologue:
      commands:
      - cache restore
      - cache restore $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache restore $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache restore $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - mono bootstrap --ci
    jobs:
    - name: Test package
      commands:
      - mono test
      - npm run test:failure
    - name: Extra test - diagnose
      commands: *1
- name: Node.js 14 - Build
  dependencies:
  - Validation
  task:
    env_vars:
    - name: NODE_VERSION
      value: '14'
    prologue:
      commands:
      - cache restore
      - mono bootstrap --ci
      - cache store
    jobs:
    - name: Build
      commands:
      - mono build
      - cache delete $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID dist
      - cache delete $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID ext
      - cache delete $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache store  $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID build
      - 'cat ext/install.report; cat ext/install.report | grep ''"status": "success"'''
- name: Node.js 14 - Tests
  dependencies:
  - Node.js 14 - Build
  task:
    env_vars:
    - name: NODE_VERSION
      value: '14'
    - name: _APPSIGNAL_EXTENSION_INSTALL
      value: 'false'
    prologue:
      commands:
      - cache restore
      - cache restore $_PACKAGE_CACHE-dist-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache restore $_PACKAGE_CACHE-ext-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - cache restore $_PACKAGE_CACHE-build-v$NODE_VERSION-$SEMAPHORE_WORKFLOW_ID
      - mono bootstrap --ci
    jobs:
    - name: Test package
      commands:
      - mono test
      - npm run test:failure
    - name: Extra test - diagnose
      commands: *1
